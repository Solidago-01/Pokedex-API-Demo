body {
    background: lightblue;
    display: grid;
    min-height: 100vh;
    grid-auto-flow: column;
    place-content: center;
    gap: 40px;
    margin: 0;
}

h1 {
  font-family: monospace;
  font-size: 3rem;
  margin: 0;
}

h2 {
  margin: 1rem 0;
}

h3 {
  font-family: monospace;
}

.surface3D {
  background-color: transparent;
  width: 600px;

  --x: 10px;
  --y: 20px;
  transform: perspective(1000px) rotateX(var(--_a, 20deg)) rotateZ(10deg);

  clip-path: polygon(
    var(--y) var(--y),
    calc(100% - var(--y)) var(--y),
    calc(100% - var(--y)) calc(100% - var(--y)),
    calc(100% - var(--y) - var(--x)) var(--_c, 100%),
    calc(var(--x) + var(--y)) var(--_c, 100%),
    var(--y) calc(100% - var(--y))
  );

  outline: var(--y) solid rgba(0, 0, 0, 0.4);
  outline-offset: calc(-1 * var(--y));
  padding: var(--y) var(--y) 0 var(--y);
  transition: 1s;

  margin: 0;
  /* box-shadow: 10px 10px 5px rgb(27, 36, 39); */
}

.pokedex-grid {
  display: grid;
  grid-template-columns: 1fr 2rem 1fr;
  grid-template-rows: 4rem 3rem 12rem 1fr;
  margin: 0rem 6rem;
  border-radius: .5rem;
  /* box-shadow: 10px 10px 5px rgb(27, 36, 39); */
}

.shift-up {
  translate: 0rem -3rem;
}

img.svg {
  width: 100%;
  height: 100%;
}

.red-background-left {
  background: #9E1B38;
  z-index: -2;
  grid-column: 1 / 3;
  grid-row: 1 / 5;
  border-radius: .5rem;
}

.red-background-right {
  background: #9E1B38;
  z-index: -2;
  grid-column: 3;
  grid-row: 3 / 5;
  border-radius: .5rem;
}

#pokedexGridBack {
  z-index: -1;
  grid-column: 1 / 4;
  grid-row: 2 / 5;
}

#pokedexGridTopLeft {
  grid-column: 1;
  grid-row: 1 / 3;
}

#pokedexGridTopRight {
  grid-column: 3;
}

#pokedexGridLeftMiddle {
  grid-column: 1;
  grid-row: 3;
}

.screen {
  width: 76%;
  height: 140px;
  outline: 5px solid black;
  border-radius: 1rem;
  margin: 2rem auto;
  text-align: center;
}

#leftScreen {
  background: rgb(43, 43, 43);
  color: rgb(43, 43, 43);
}

#rightScreen {
  /* background: rgb(2, 58, 32); */
  background: rgb(2,58,32);
  background: linear-gradient(122deg, rgba(2,58,32,1) 0%, rgba(2,58,32,1) 51%, rgba(36,105,72,1) 65%, rgba(2,58,32,1) 78%);  color: white;
}

#pokedexGridLeftBottom {
  margin: 0 1rem;
  grid-column: 1;
  grid-row: 4;   
}

.pokemon-search {
  margin-left: 1rem;
}

input {
  margin-bottom: 1rem;
  border-radius: .5rem;
  padding: 4px 0;
}

button {
  background-color: rgb(3, 3, 150);
  color: white;
  border-color: red;
  border-radius: .4rem;
  padding: 0 1rem;
  font-size: 1rem;
}

button:hover {
  border: 2px solid white;
}

#search {
  padding: 3px 1rem;
  background-color: rgb(2, 58, 32);
}

#pokedexGridMiddle {
  grid-column: 2;
  grid-row: 1 / 5;
  height: 110%;
  width: 100%;
}

#pokedexGridRight {
  grid-column: 3;
  grid-row: 3 / 5;
}

p {
  margin: 2px .5rem;
  filter: drop-shadow(0 0 3px rgb(152, 247, 183));
  font-family: monospace;
}

.one-line {
  display: inline-block;
} 

#pokemonSprite {
  width: 94%;
  height: 94%;
  border-radius: 1rem;
  margin: auto;
  filter: blur(1px) brightness(1.5);
  filter: drop-shadow(0 0 3px rgb(152, 247, 183));

}

#pokemonInfo {
  position: absolute;
  margin-top: .75rem;
  margin-left: .6rem;
  text-align: left;
  filter: brightness(1.5);
}

#hearCry {
  margin-left: 2.2rem;
  padding: 4px 10px;
}

footer {
  grid-row: 2;
  text-align: left;
  display: none;
}

/* CSS for CRT Screen Overlay */
/* CSS for CRT Screen Overlay */

.container {
  position: relative;
}

.filterSettings {
  /* these effects go directly to the image */
  filter: blur(1px) saturate(125%) contrast(110%);
}

.crtOverlay {
  opacity: 100%;
  
  /* background: rgb(255,0,0); */
  background: linear-gradient(90deg, rgba(255,0,0,.15) 0%, rgba(50,255,77,.05) 48%, rgba(252,252,252,.05) 58%, rgba(0,82,255,.05) 100%);
  
  /* define shape and position */
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0%;
  left: 0%;
  border-radius: 1rem;
}

/* /////////// */

.scanlinesContainer {
  overflow: hidden;
  position: absolute;
  display: grid;
}

.scanlines {
  animation: scanlineMain 5s linear infinite;
}

@keyframes scanlineMain {
  from {
      transform: translateY(0px);
  }

  to {
      transform: translateY(-550px);
  }
}
